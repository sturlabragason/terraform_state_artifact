name: terraform-state-artifact
description: 'Downloads and uploads your Terraform statefile as an encrypted Github Artifact'
author: 'Sturla Bragason & Gioele De Vitti'

inputs:
  passphrase:
    description: 'A passphrase to encrypt and decrypt the statefile artifact.'
    required: true
  download_upload:
    description: 'Whether to download and decrypt or upload and encrypt.'
    required: true
  statefile_location:
    description: 'The location of your Terraform statefile.'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - id: terraform-state-artifact-download
      if: ${{ inputs.download_upload == 'download' }}
      run: |
        $Repo = "${{ github.repository }}"
        $BaseUri = "https://api.github.com"
        $ArtifactUri = "$BaseUri/repos/$Repo/actions/artifacts"
        $Token = "${{ github.token }}" | ConvertTo-SecureString -AsPlainText
        $RestResponse = Invoke-RestMethod -Authentication Bearer -Uri $ArtifactUri -Token $Token | Select-Object -ExpandProperty artifacts
        if ($RestResponse){
          $MostRecentArtifactURI = $RestResponse | Sort-Object -Property created_at -Descending | where name -eq "terraform-state" | Select-Object -First 1 | Select-Object -ExpandProperty archive_download_url
          Write-Host "Most recent artifact URI = $MostRecentArtifactURI"
          if ($MostRecentArtifactURI){
            Invoke-RestMethod -uri $MostRecentArtifactURI -Token $Token -Authentication bearer -outfile ./state.zip
            Expand-Archive ./state.zip
            gpg --batch --passphrase ${{ inputs.passphrase }} -o .${{ inputs.statefile_location }}/terraform.tfstate -d ./state/terraform.tfstate.enc
          }
        }
      shell: pwsh
    - id: terraform-state-artifact-upload
      if: ${{ inputs.download_upload == 'upload' }}
      run: |
        $StateExists = Test-Path -Path .${{ inputs.statefile_location }}/terraform.tfstate -PathType Leaf
        if ($StateExists){
          gpg --batch --symmetric --cipher-algo aes256 --digest-algo sha256 --passphrase ${{ inputs.passphrase }} -o .${{ inputs.statefile_location }}/terraform.tfstate.enc .${{ inputs.statefile_location }}/terraform.tfstate
        }
      shell: pwsh
    - uses: actions/upload-artifact@v3
      if: ${{ inputs.download_upload == 'upload' }}
      with:
        name: terraform-state
        path: .${{ inputs.statefile_location }}/terraform.tfstate.enc
branding:
  icon: 'cloud'
  color: 'gray-dark'